#version 430 core

layout(location = 0) uniform uint uFaces;

layout(std430, binding = 0) buffer VertexBuffer {
	vec3 vertexPosition[];
};

layout(std430, binding = 1) buffer AdjacencyBuffer {
	uint adjacency[];
};

layout(std430, binding = 2) buffer AdjacencyIndicesBuffer {
	uint adjacencyIndices[];
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main() {
	uint workIndex = gl_WorkGroupID.x * 8 + gl_WorkGroupID.y;

	if (workIndex < uFaces) {
		uint adjacencyIndex = adjacencyIndices[workIndex];
		uint vertexIndex = adjacency[adjacencyIndex];
		uint valence = adjacency[adjacencyIndex + 1];
		float fvalence = valence;

		vec3 pos = vec3(0.0);

		for (uint vert = 0; vert < valence; vert++) {
			pos += vertexPosition[adjacency[adjacencyIndex + 2 + vert]];
		}

		vertexPosition[vertexIndex] = pos / fvalence;
	}
}
